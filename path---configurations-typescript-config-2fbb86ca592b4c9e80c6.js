webpackJsonp([0xc8fb1bbc4931],{678:function(t,e){t.exports={data:{site:{siteMetadata:{docSections:{basics:["/basics/introduction/","/basics/quick-start-guide/","/basics/slow-start-guide/","/basics/guide-react/","/basics/guide-vue/","/basics/guide-angular/","/basics/writing-stories/","/basics/exporting-storybook/","/basics/faq/","/basics/community/","/basics/live-examples/"],configurations:["/configurations/default-config/","/configurations/custom-webpack-config/","/configurations/custom-babel-config/","/configurations/typescript-config/","/configurations/add-custom-head-tags/","/configurations/serving-static-files/","/configurations/env-vars/","/configurations/cli-options/"],testing:["/testing/react-ui-testing/","/testing/structural-testing/","/testing/interaction-testing/","/testing/css-style-testing/","/testing/manual-testing/"],addons:["/addons/introduction/","/addons/using-addons/","/addons/addon-gallery/","/addons/writing-addons/","/addons/api/"]}}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/404/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/addons/addon-gallery/"},frontmatter:{title:"Addon Gallery",id:"addon-gallery"}}},{node:{fields:{slug:"/addons/api/"},frontmatter:{title:"API",id:"api"}}},{node:{fields:{slug:"/addons/introduction/"},frontmatter:{title:"Intro to Addons",id:"introduction"}}},{node:{fields:{slug:"/addons/using-addons/"},frontmatter:{title:"Using Addons",id:"using-addons"}}},{node:{fields:{slug:"/addons/writing-addons/"},frontmatter:{title:"Writing Addons",id:"writing-addons"}}},{node:{fields:{slug:"/basics/community/"},frontmatter:{title:"Community",id:"community"}}},{node:{fields:{slug:"/basics/exporting-storybook/"},frontmatter:{title:"Exporting Storybook as a Static App",id:"exporting-storybook"}}},{node:{fields:{slug:"/basics/guide-react/"},frontmatter:{title:"Storybook for React",id:"guide-react"}}},{node:{fields:{slug:"/basics/faq/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/basics/guide-angular/"},frontmatter:{title:"Storybook for Angular",id:"guide-angular"}}},{node:{fields:{slug:"/basics/guide-vue/"},frontmatter:{title:"Storybook for Vue",id:"guide-vue"}}},{node:{fields:{slug:"/basics/introduction/"},frontmatter:{title:"Introduction",id:"introduction"}}},{node:{fields:{slug:"/basics/quick-start-guide/"},frontmatter:{title:"Quick Start Guide",id:"quick-start-guide"}}},{node:{fields:{slug:"/basics/live-examples/"},frontmatter:{title:"Live Examples",id:"live-examples"}}},{node:{fields:{slug:"/basics/slow-start-guide/"},frontmatter:{title:"Slow start guide",id:"slow-start-guide"}}},{node:{fields:{slug:"/basics/writing-stories/"},frontmatter:{title:"Writing Stories",id:"writing-stories"}}},{node:{fields:{slug:"/configurations/cli-options/"},frontmatter:{title:"CLI Options",id:"cli-options"}}},{node:{fields:{slug:"/configurations/custom-babel-config/"},frontmatter:{title:"Custom Babel Config",id:"custom-babel-config"}}},{node:{fields:{slug:"/configurations/add-custom-head-tags/"},frontmatter:{title:"Add Custom Head Tags",id:"add-custom-head-tags"}}},{node:{fields:{slug:"/configurations/custom-webpack-config/"},frontmatter:{title:"Custom Webpack Config",id:"custom-webpack-config"}}},{node:{fields:{slug:"/configurations/default-config/"},frontmatter:{title:"Default Config",id:"default-config"}}},{node:{fields:{slug:"/configurations/serving-static-files/"},frontmatter:{title:"Serving Static Files",id:"serving-static-files"}}},{node:{fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"Typescript Config",id:"typescript-config"}}},{node:{fields:{slug:"/configurations/env-vars/"},frontmatter:{title:"",id:null}}},{node:{fields:{slug:"/testing/css-style-testing/"},frontmatter:{title:"CSS/Style Testing",id:"css-style-testing"}}},{node:{fields:{slug:"/testing/interaction-testing/"},frontmatter:{title:"Interaction Testing",id:"interaction-testing"}}},{node:{fields:{slug:"/testing/manual-testing/"},frontmatter:{title:"Manual Testing",id:"manual-testing"}}},{node:{fields:{slug:"/testing/react-ui-testing/"},frontmatter:{title:"Introduction: React UI Testing",id:"react-ui-testing"}}},{node:{fields:{slug:"/testing/structural-testing/"},frontmatter:{title:"Structural Testing",id:"structural-testing"}}}]},markdownRemark:{html:'<p>This is a central reference for using Storybook with Typescript.</p>\n<h2 id="dependencies-you-may-need"><a href="#dependencies-you-may-need" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dependencies you may need</h2>\n<pre><code class="language-bash">yarn add -D typescript\nyarn add -D awesome-typescript-loader\nyarn add -D @storybook/addon-info react-docgen-typescript-webpack-plugin # optional but recommended\nyarn add -D jest "@types/jest" ts-jest #testing\n</code></pre>\n<p>We have had the best experience using <code>awesome-typescript-loader</code>, but other tutorials may use <code>ts-loader</code>, just configure accordingly. You can even use <code>babel-loader</code> with a <code>ts-loader</code> configuration.</p>\n<h2 id="setting-up-typescript-to-work-with-storybook"><a href="#setting-up-typescript-to-work-with-storybook" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up Typescript to work with Storybook</h2>\n<p>We first have to use the <a href="/configurations/custom-webpack-config/#full-control-mode--default">custom Webpack config in full control mode, extending default configs</a>:</p>\n<pre><code class="language-js">const path = require("path");\nconst TSDocgenPlugin = require("react-docgen-typescript-webpack-plugin");\nmodule.exports = (baseConfig, env, config) => {\n  config.module.rules.push({\n    test: /\\.(ts|tsx)$/,\n    loader: require.resolve("awesome-typescript-loader")\n  });\n  config.plugins.push(new TSDocgenPlugin()); // optional\n  config.resolve.extensions.push(".ts", ".tsx");\n  return config;\n};\n</code></pre>\n<p>The above example shows a working config with the TSDocgen plugin also integrated; remove the optional sections if you don’t plan on using them.</p>\n<h2 id="tsconfigjson"><a href="#tsconfigjson" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>tsconfig.json</code></h2>\n<pre><code class="language-json">{\n  "compilerOptions": {\n    "outDir": "build/lib",\n    "module": "commonjs",\n    "target": "es5",\n    "lib": ["es5", "es6", "es7", "es2017", "dom"],\n    "sourceMap": true,\n    "allowJs": false,\n    "jsx": "react",\n    "moduleResolution": "node",\n    "rootDirs": ["src", "stories"],\n    "baseUrl": "src",\n    "forceConsistentCasingInFileNames": true,\n    "noImplicitReturns": true,\n    "noImplicitThis": true,\n    "noImplicitAny": true,\n    "strictNullChecks": true,\n    "suppressImplicitAnyIndexErrors": true,\n    "noUnusedLocals": true,\n    "declaration": true,\n    "allowSyntheticDefaultImports": true,\n    "experimentalDecorators": true\n  },\n  "include": ["src/**/*"],\n  "exclude": ["node_modules", "build", "scripts"]\n}\n</code></pre>\n<p>This is for the default configuration where <code>/stories</code> is a peer of <code>src</code>. If you have them all in just <code>src</code> you may wish to replace <code>"rootDirs": ["src", "stories"]</code> above with <code>"rootDir": "src",</code>.</p>\n<h2 id="using-typescript-with-the-tsdocgen-addon"><a href="#using-typescript-with-the-tsdocgen-addon" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Using Typescript with the TSDocgen addon</h2>\n<p>The very handy <a href="https://github.com/storybooks/storybook/tree/master/addons/info">Storybook Info addon</a> autogenerates prop tables documentation for each component, however it doesn’t work with Typescript types. The current solution is to use <a href="https://github.com/strothj/react-docgen-typescript-loader">react-docgen-typescript-loader</a> to preprocess the Typescript files to give the Info addon what it needs. The webpack config above does this, and so for the rest of your stories you use it as per normal:</p>\n<pre><code class="language-js">import React from "react";\nimport { storiesOf } from "@storybook/react";\nimport { withInfo } from "@storybook/addon-info";\nimport { action } from "@storybook/addon-actions";\nimport TicTacToeCell from "./TicTacToeCell";\n\nconst stories = storiesOf("Components", module);\n\nstories.add(\n  "TicTacToeCell",\n  withInfo({ inline: true })(() => &#x3C;TicTacToeCell value="X" position={{ x: 0, y: 0 }} onClick={action("onClick")} />)\n);\n</code></pre>\n<h2 id="customizing-type-annotationsdescriptions"><a href="#customizing-type-annotationsdescriptions" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Customizing Type annotations/descriptions</h2>\n<p>Please refer to the <a href="https://github.com/strothj/react-docgen-typescript-loader">react-docgen-typescript-loader</a> docs for writing prop descriptions and other annotations to your Typescript interfaces.</p>\n<p>Additional annotation can be achieved by creating a <code>wInfo</code> higher order component:</p>\n<pre><code class="language-js">import { withInfo } from "@storybook/addon-info";\nconst wInfoStyle = {\n  header: {\n    h1: {\n      marginRight: "20px",\n      fontSize: "25px",\n      display: "inline"\n    },\n    body: {\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    h2: {\n      display: "inline",\n      color: "#999"\n    }\n  },\n  infoBody: {\n    backgroundColor: "#eee",\n    padding: "0px 5px",\n    lineHeight: "2"\n  }\n};\nexport const wInfo = text => withInfo({ inline: true, source: false, styles: wInfoStyle, text: text });\n</code></pre>\n<p>This can be used like so:</p>\n<pre><code class="language-js">import React from "react";\n\nimport { storiesOf } from "@storybook/react";\nimport { PrimaryButton } from "./Button";\nimport { wInfo } from "../../utils";\nimport { text, select, boolean } from "@storybook/addon-knobs/react";\n\nstoriesOf("Components/Button", module).addWithJSX(\n  "basic PrimaryButton",\n  wInfo(`\n\n  ### Notes\n\n  light button seen on &#x3C;https://zpl.io/aM49ZBd>\n\n  ### Usage\n  ~~~js\n  &#x3C;PrimaryButton\n    label={text(\'label\', \'Enroll\')}\n    disabled={boolean(\'disabled\',false)}\n    onClick={() => alert(\'hello there\')}\n  />\n  ~~~\n\n`)(() => (\n    &#x3C;PrimaryButton\n      label={text("label", "Enroll")}\n      disabled={boolean("disabled", false)}\n      onClick={() => alert("hello there")}\n    />\n  ))\n);\n</code></pre>\n<p>And this is how it looks:</p>\n<p><img src="https://user-images.githubusercontent.com/35976578/38376038-ac02b432-38c5-11e8-9aed-f4fa2e258f60.png" alt="image"></p>\n<p>Note: Component docgen information can not be generated for components that are only exported as default. You can work around the issue by exporting the component using a named export.</p>\n<h2 id="setting-up-jest-tests"><a href="#setting-up-jest-tests" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Setting up Jest tests</h2>\n<p>The ts-jest <a href="https://github.com/kulshekhar/ts-jest">README</a> explains pretty clearly how to get Jest to recognize TypeScript code.</p>\n<p>This is an example package.json config for jest:</p>\n<pre><code class="language-json">"jest": {\n  "transform": {\n    ".(ts|tsx)": "&#x3C;rootDir>/node_modules/ts-jest/preprocessor.js"\n  },\n  "mapCoverage": true,\n  "testPathIgnorePatterns": [\n    "/node_modules/",\n    "/lib/"\n  ],\n  "testRegex": "(/test/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$",\n  "moduleFileExtensions": [\n    "ts",\n    "tsx",\n    "js",\n    "json"\n  ]\n}\n</code></pre>\n<h2 id="building-your-typescript-storybook"><a href="#building-your-typescript-storybook" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Building your Typescript Storybook</h2>\n<p>You will need to set up some scripts - these may help:</p>\n<pre><code class="language-json">  "scripts": {\n    "start": "react-scripts-ts start",\n    "build": "npm run lint &#x26;&#x26; npm run build-lib &#x26;&#x26; build-storybook",\n    "build-lib-watch": "tsc -w",\n    "build-lib": "tsc &#x26;&#x26; npm run copy-css-to-lib &#x26;&#x26; npm run copy-svg-to-lib &#x26;&#x26; npm run copy-png-to-lib &#x26;&#x26; npm run copy-woff2-to-lib",\n    "test": "react-scripts-ts test --env=jsdom",\n    "test:coverage": "npm test -- --coverage",\n    "eject": "react-scripts-ts eject",\n    "storybook": "start-storybook -p 6006",\n    "build-storybook": "build-storybook",\n    "copy-css-to-lib": "cpx \\"./src/**/*.css\\" ./build/lib",\n    "copy-woff2-to-lib": "cpx \\"./src/**/*.woff2\\" ./build/lib",\n    "copy-svg-to-lib": "cpx \\"./src/**/*.svg\\" ./build/lib",\n    "copy-png-to-lib": "cpx \\"./src/**/*.png\\" ./build/lib",\n    "lint": "tslint -c tslint.json \'src/**/*.{ts,tsx}\'"\n  },\n</code></pre>\n<h2 id="related-issues-and-helpful-resources"><a href="#related-issues-and-helpful-resources" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Related Issues and Helpful Resources</h2>\n<ul>\n<li><a href="https://medium.com/@mtiller/storybook-react-typescript-and-jest-c9059ea06fa7">Storybook, React, TypeScript and Jest</a></li>\n<li><a href="http://www.joshschreuder.me/react-storybooks-with-typescript/">React, Storybook &#x26; TypeScript</a></li>\n</ul>',fields:{slug:"/configurations/typescript-config/"},frontmatter:{title:"Typescript Config",id:"typescript-config"}}},pathContext:{slug:"/configurations/typescript-config/"}}}});
//# sourceMappingURL=path---configurations-typescript-config-2fbb86ca592b4c9e80c6.js.map